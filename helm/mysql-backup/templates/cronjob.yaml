apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: mysql-backup-cronjob
spec:
  schedule: "{{ .Values.scheduling.frequency }}"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: mysql-backup
              image: mysql:5.7
              env:
                - name: MYSQL_HOST
                  value: {{ .Values.mysql.host }}
                - name: MYSQL_PORT
                  value: {{ .Values.mysql.port }}
                - name: MYSQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: mysql-backup-secret
                      key: username
                - name: MYSQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mysql-backup-secret
                      key: password
                - name: BACKUP_TYPE
                  value: {{ .Values.backupTypes }}
                - name: BACKUP_FREQUENCY
                  value: {{ .Values.scheduling.frequency }}
                - name: BACKUP_TIME
                  value: {{ .Values.scheduling.time }}
                - name: MAX_EXECUTION_TIME
                  value: {{ .Values.scheduling.maxExecutionTime }}
                - name: NOTIFICATION_EMAIL
                  value: {{ .Values.notifications.email.enabled }}
                - name: SMTP_HOST
                  value: {{ .Values.notifications.email.smtp.host }}
                - name: SMTP_PORT
                  value: {{ .Values.notifications.email.smtp.port }}
                - name: SMTP_USER
                  value: {{ .Values.notifications.email.smtp.username }}
                - name: SMTP_PASSWORD
                  value: {{ .Values.notifications.email.smtp.password }}
                - name: DO_SPACES_ENABLED
                  value: {{ .Values.backupDestinations.digitalOceanSpaces.enabled }}
                - name: DO_SPACES_ACCESS_KEY
                  value: {{ .Values.backupDestinations.digitalOceanSpaces.accessKey }}
                - name: DO_SPACES_SECRET_KEY
                  value: {{ .Values.backupDestinations.digitalOceanSpaces.secretKey }}
                - name: DO_SPACES_REGION
                  value: {{ .Values.backupDestinations.digitalOceanSpaces.region }}
                - name: DO_SPACES_BUCKET
                  value: {{ .Values.backupDestinations.digitalOceanSpaces.bucket }}
                - name: AWS_S3_ENABLED
                  value: {{ .Values.backupDestinations.awsS3.enabled }}
                - name: AWS_S3_ACCESS_KEY
                  value: {{ .Values.backupDestinations.awsS3.accessKey }}
                - name: AWS_S3_SECRET_KEY
                  value: {{ .Values.backupDestinations.awsS3.secretKey }}
                - name: AWS_S3_REGION
                  value: {{ .Values.backupDestinations.awsS3.region }}
                - name: AWS_S3_BUCKET
                  value: {{ .Values.backupDestinations.awsS3.bucket }}
                - name: RSA_PUBLIC_KEY
                  value: {{ .Values.encryption.rsaPublicKeyPath }}
                - name: RETENTION_DAYS
                  value: {{ .Values.retention.days }}
              volumeMounts:
                - name: backup-storage
                  mountPath: /backup
              command: ["/bin/sh", "-c", "/scripts/backup.sh"]
          restartPolicy: OnFailure
          volumes:
            - name: backup-storage
              persistentVolumeClaim:
                claimName: backup-pvc
